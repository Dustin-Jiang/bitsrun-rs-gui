name: Multi-Platform Build and Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:

concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4.2.2

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Bun
        run: curl -fsSL https://bun.sh/install | bash

      - name: Add Bun to PATH
        run: echo "export PATH=$HOME/.bun/bin:$PATH" >> $GITHUB_ENV

      - name: Install Project Dependencies
        run: ~/.bun/bin/bun install

      - name: Setup Rust Environment
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install tauri-cli

      - name: Build Tauri App
        run: export PATH=$HOME/.bun/bin:$PATH && bun run tauri build

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: macos-app
          path: src-tauri/target/release/bundle/dmg/*.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            C:\Users\runneradmin\.cargo
            .\target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Bun
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://bun.sh/install.ps1 -OutFile install.ps1
          .\install.ps1

      - name: Add Bun to PATH
        shell: pwsh
        run: |
          $env:Path += ";C:\Users\runneradmin\.bun\bin"
          [Environment]::SetEnvironmentVariable("Path", $env:Path, "User")
          Write-Output "Current PATH: $env:PATH"
          Get-Command bun -ErrorAction Stop

      - name: Install Dependencies
        shell: cmd
        run: C:\Users\runneradmin\.bun\bin\bun.exe install

      - name: Setup Rust and Tauri CLI
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://sh.rustup.rs -OutFile rustup-init.sh
          ./rustup-init.sh -y
          rustup default stable
          rustup component add rust-src
          rustup target add x86_64-pc-windows-msvc
          cargo install tauri-cli

      - name: Build Tauri App
        shell: pwsh
        run: |
          $env:Path += ";C:\Users\runneradmin\.bun\bin"
          Write-Output "Updated PATH: $env:Path"
          bun run tauri build

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: windows-app
          path: |
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/bundle/msi/*.msi

  build-linux:
    runs-on: ubuntu-latest
    container: debian:10-slim  # 使用 Debian 10 容器，GLIBC 2.28
    env:
      CARGO_HOME: /userhome/.cargo
      PATH: /userhome/.cargo/bin:$PATH
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            /userhome/.cargo
            ./target
          key: ${{ runner.os }}-debian10-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Update and Install Base System Dependencies
        run: |
          apt-get update && apt-get install -y --no-install-recommends \
            build-essential curl wget ca-certificates gnupg apt-transport-https \
            libwebkit2gtk-4.0-dev \
            libgtk-3-dev \
            libglib2.0-dev \
            libappindicator3-dev \
            desktop-file-utils

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | BUN_INSTALL="/userhome/.bun" bash

      - name: Add Bun to PATH
        run: echo "export PATH=/userhome/.bun/bin:$PATH" >> $GITHUB_ENV

      - name: Install Project Dependencies
        run: /userhome/.bun/bin/bun install

      - name: Install Rust and Cargo
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $CARGO_HOME/env
          rustup target add x86_64-unknown-linux-gnu
          cargo install tauri-cli

      - name: Build Tauri App
        env:
          RUST_LOG: debug
        run: |
          bun run tauri build

      - name: List Build Artifacts
        run: ls -R target/release/bundle/

      - name: Upload Debian Package
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-app
          path: |
            target/release/bundle/deb/*.deb
            target/release/bundle/rpm/*.rpm